########################################
#
# FLIGHT-RELATED FUNCTIONS
#
########################################
YOLO_TARGET = 1
YOLO_NEI_TARGET = 0
yolo_init = 0
yolo_left_buff = 0
yolo_right_buff = 0
YOLO_L_GOAL_1 = math.vec2.new(20,0,0)
YOLO_L_GOAL_2 = math.vec2.new(-20,0,0)
YOLO_GPS_1 = {.lat =0, .long=0}
YOLO_GPS_2 = {.lat =0, .long=0}

# yolo Demostration
function yolo_demo(){
    var left_count = 0
    var right_count = 0
    var img_bound_x={.l=0,.r=320} # assumed left image pixel x boundary
    var img_bound_y={.t=0,.b=480} # assumed left image pixel y boundary
    if(yolo_init == 0){
        yolo_init = 1
        yolo_gps_in =  {.latitude=pose.position.latitude, .longitude=pose.position.longitude, .altitude= pose.position.altitude}
        yolo_left_buff = 0
        yolo_right_buff = 0
         YOLO_GPS_1 = gps_from_vec(YOLO_L_GOAL_1)
         YOLO_GPS_2 = gps_from_vec(YOLO_L_GOAL_2)
    }
    #log("POS lat : ",pose.position.latitude, " long: ", pose.position.longitude )
    if(yolo_boxes != nil){
      # log("yolo tab size",size(yolo_boxes))
      var yol_i = 0
      while(yol_i < yolo_boxes.size){
        var table_id = string.tostring(yol_i)
        if(yolo_boxes[table_id].class == "person"){
            var diff_x = (yolo_boxes[table_id].xmax - yolo_boxes[table_id].xmin) / 2
            var mid_x = yolo_boxes[table_id].xmax - diff_x
            if( (mid_x >=img_bound_x.l and mid_x <=img_bound_x.r)){
                # person is in the left side of the image
                left_count = left_count + 1
            }
            else{
                # person is in the right side of the image
                right_count = right_count + 1
            }
        }
        yol_i = yol_i + 1
      }
        # log("left_count: ", left_count, " right_count: ", right_count) 
        if(left_count > right_count){
            if(1){
                YOLO_TARGET = 1
                neighbors.broadcast("cmd", 555)
                #storegoal(YOLO_GPS_1.latitude, YOLO_GPS_1.longitude, pose.position.altitude)
                yolo_gps_in = {.latitude=YOLO_GPS_1.latitude, .longitude=YOLO_GPS_1.longitude, .altitude= pose.position.altitude}
                # log("left dominating")
                yolo_left_buff = 0
                yolo_right_buff = 0
            }
            else{
                yolo_left_buff = yolo_left_buff + 1
                yolo_right_buff = 0
            }
        }
        else if(left_count < right_count){
            if(1){
                YOLO_TARGET = 2
                neighbors.broadcast("cmd", 556)
                yolo_gps_in = {.latitude=YOLO_GPS_2.latitude, .longitude=YOLO_GPS_2.longitude, .altitude= pose.position.altitude}
                # log("right dominating")
                yolo_right_buff = 0
                yolo_left_buff = 0
            }
            else{
                yolo_right_buff = yolo_right_buff + 1
                yolo_left_buff = 0
            }
        }
        goto_gps_in(yolo_demo, yolo_gps_in)
    }
    if( YOLO_NEI_TARGET == 1){
        # YOLO_NEI_TARGET =0
        YOLO_TARGET = 1
        yolo_gps_in = {.latitude=YOLO_GPS_1.latitude, .longitude=YOLO_GPS_1.longitude, .altitude= pose.position.altitude}
        # log("left dominating")
        goto_gps_in(yolo_demo, yolo_gps_in)
    }
    else if(YOLO_NEI_TARGET == 2){
    	YOLO_TARGET = 2
        # YOLO_NEI_TARGET = 0
        yolo_gps_in = {.latitude=YOLO_GPS_2.latitude, .longitude=YOLO_GPS_2.longitude, .altitude= pose.position.altitude}
        # log("right dominating")
        goto_gps_in(yolo_demo, yolo_gps_in)
    }
}